apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: clc-ui-tests
spec:
  description: |
    Cluster lifecylce test suite that provisons managed clusters, ks clusters, cluster pool and many more
  params:
    - description: 'Hub OCP API url'
      name: CYPRESS_HUB_API_URL
      default: 'https://api.qe3-vmware-ibm.dev09.red-chesterfield.com:6443'
      type: string
    - description: 'Hub OCP username'
      name: CYPRESS_OPTIONS_HUB_USER
      default: 'kubeadmin'
      type: string
    - description: 'Hub OCP password'
      name: CYPRESS_OPTIONS_HUB_PASSWORD
      default: 'sRTjS-4BTuP-2MnDJ-SNnC9'
      type: string
    - description: 'The spoke public cloud providers you want to provision (aws, gcp, azure)'
      name: CYPRESS_SPOKE_CLUSTER
      default: 'aws'
      type: string
    - description: 'The ocp image version used to provision (4.16.7, 4.15.10, etc.)'
      name: CYPRESS_CLC_OCP_IMAGE_VERSION
      default: '4.16.6'
      type: string
    - description: 'The ocp image registry used to provision'
      name: CYPRESS_CLC_OCP_IMAGE_REGISTRY
      default: 'quay.io/openshift-release-dev/ocp-release'
      type: string
    - description: 'The supported KS clusters (IKS,EKS,GKE,AKS,ROKS,ROSA-HCP,ROSA-CLASSIC,ARO,OSD,ARM,OCP311)'
      name: IMPORT_KUBERNETES_CLUSTERS
      default: ''
      type: string
    - description: 'The tags when you want to run a subset of tests'
      name: TEST_STAGE
      default: 'postrelease-create'
      type: string
    - description: 'Browser type (chrome, electron, firefox, edge)'
      name: BROWSER
      default: 'electron'
      type: string
  tasks:
    - name: clc-ui-test-suite
      params:
        - name: CYPRESS_HUB_API_URL
          value: $(params.CYPRESS_HUB_API_URL)
        - name: CYPRESS_OPTIONS_HUB_USER
          value: $(params.CYPRESS_OPTIONS_HUB_USER)
        - name: CYPRESS_OPTIONS_HUB_PASSWORD
          value: $(params.CYPRESS_OPTIONS_HUB_PASSWORD)
        - name: CYPRESS_SPOKE_CLUSTER
          value: $(params.CYPRESS_SPOKE_CLUSTER)
        - name: CYPRESS_CLC_OCP_IMAGE_VERSION
          value: $(params.CYPRESS_CLC_OCP_IMAGE_VERSION)
        - name: CYPRESS_CLC_OCP_IMAGE_REGISTRY
          value: $(params.CYPRESS_CLC_OCP_IMAGE_REGISTRY)
        - name: IMPORT_KUBERNETES_CLUSTERS
          value: $(params.IMPORT_KUBERNETES_CLUSTERS)
        - name: TEST_STAGE
          value: $(params.TEST_STAGE)
        - name: BROWSER
          value: $(params.BROWSER) 
      taskSpec:
        params:
        - name: CYPRESS_HUB_API_URL
        - name: CYPRESS_OPTIONS_HUB_USER
        - name: CYPRESS_OPTIONS_HUB_PASSWORD
        - name: CYPRESS_SPOKE_CLUSTER
        - name: CYPRESS_CLC_OCP_IMAGE_VERSION
        - name: CYPRESS_CLC_OCP_IMAGE_REGISTRY
        - name: IMPORT_KUBERNETES_CLUSTERS
        - name: TEST_STAGE
        - name: BROWSER  
        steps:
        - image: quay.io/vboulos/acmqe-automation/clc:main
          imagePullPolicy: Always
          env:
          - name: CYPRESS_HUB_API_URL
            value: $(params.CYPRESS_HUB_API_URL)
          - name: CYPRESS_OPTIONS_HUB_USER
            value: $(params.CYPRESS_OPTIONS_HUB_USER)
          - name: CYPRESS_OPTIONS_HUB_PASSWORD
            value: $(params.CYPRESS_OPTIONS_HUB_PASSWORD)
          - name: CYPRESS_SPOKE_CLUSTER
            value: $(params.CYPRESS_SPOKE_CLUSTER)
          - name: CYPRESS_CLC_OCP_IMAGE_VERSION
            value: $(params.CYPRESS_CLC_OCP_IMAGE_VERSION)
          - name: CYPRESS_CLC_OCP_IMAGE_REGISTRY
            value: $(params.CYPRESS_CLC_OCP_IMAGE_REGISTRY)
          - name: IMPORT_KUBERNETES_CLUSTERS
            value: $(params.IMPORT_KUBERNETES_CLUSTERS)
          - name: TEST_STAGE
            value: $(params.TEST_STAGE)
          - name: BROWSER
            value: $(params.BROWSER)
          - name: MY_GITHUB_TOKEN
            valueFrom:
              secretKeyRef:
                name: vincent-secrets
                key: MY_GITHUB_TOKEN
          - name: GIT_BRANCH
            valueFrom:
              secretKeyRef:
                name: vincent-secrets
                key: GIT_BRANCH
          - name: GITHUB_USER
            valueFrom:
              secretKeyRef:
                name: vincent-secrets
                key: GITHUB_USER
          - name: OPTIONS_FILE
            valueFrom:
              secretKeyRef:
                name: clc-options-yaml-file-encoded
                key: CLC_OPTIONS_YAML     
          script: |
            ls -al
            base64_options_yaml=$(echo "${OPTIONS_FILE}")

            # Decode the base64 content
            decoded_options_yaml=$(echo "$base64_options_yaml" | base64 -d)

            # Save the decoded content to a new file
            echo "$decoded_options_yaml" > options.yaml
          
            ls -al
            shopt -s extglob
            chmod 777 options.yaml
            if [[ "$TEST_STAGE" == @(all|create|preupgrade|postupgrade|postrelease-create|OCPInterop-create) ]]; then
                clusterName=$(yq e '.options.clusters.aws.clusterName' options.yaml)
                echo "###clusterName1"
                echo $clusterName
                /usr/local/bin/yq e -i '.options.clusters.aws.clusterName="'"$clusterName"'"' options.yaml
                clusterName=$(yq e '.options.clusters.azure.clusterName' options.yaml)
                /usr/local/bin/yq e -i '.options.clusters.azure.clusterName="'"$clusterName"'"' options.yaml
                clusterName=$(yq e '.options.clusters.gcp.clusterName' options.yaml)
                /usr/local/bin/yq e -i '.options.clusters.gcp.clusterName="'"$clusterName"'"' options.yaml
                clusterName=$(yq e '.options.clusters.azgov.clusterName' options.yaml)
                /usr/local/bin/yq e -i '.options.clusters.azgov.clusterName="'"$clusterName"'"' options.yaml
                echo "ClusterName2: ###################"
                echo $clusterName
            fi

            export DISPLAY=:99
            Xvfb :99 -screen 0 1024x768x16 2>/dev/null &
            bash -x ./start-tests.sh
            ls -al 
            echo "###################"
            ls -al results/
